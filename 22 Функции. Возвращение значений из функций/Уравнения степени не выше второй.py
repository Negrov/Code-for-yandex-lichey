"""


Напишите функцию roots_of_quadratic_equation(a,b,c), которая принимает параметры a,b,c и возвращает решения
уравнения ax2 + bx + c = 0.

Возвращаемое значение у функции ровно одно, а корней может быть от нуля до двух (есть еще один случай: a = b = c = 0,
при котором решением является любое число; про него ниже), поэтому сделать так, чтобы эта функция возвращала просто
значение корня, не получится.

Вместо этого вы должны вернуть из функции список, содержащий значения всех корней уравнения (одно, два или ни одного).
Если корнем является любое значение x, верните вместо списка чисел – список, содержащий одну строку “all” (["all"])

Не забудьте рассмотреть случаи, когда квадратное уравнение вырождается до линейного (a = 0).
Также бывает, что линейное уравнение вырождается еще дальше – до уравнения, в котором x не участвует вовсе (a = b = 0).
В этом случае мы получаем уравнение c = 0, которое, в зависимости от значения c, либо не имеет корней, либо корнем
является любой x.

"""


def roots_of_quadratic_equation(a, b, c):
    gg = []
    if a == 0 and b == 0 and c == 0:
        gg.append("all")
        return gg
    elif a == 0 and b == 0:
        return []
    elif a == 0:
        gg.append(-c / b)
        return gg
    else:
        d = b ** 2 - 4 * a * c
        if d > 0:
            gg.append((-b + d ** 0.5) / (2 * a))
            gg.append((-b - d ** 0.5) / (2 * a))
        elif d == 0:
            gg.append(-b / (2 * a))
        else:
            return []
        return gg
